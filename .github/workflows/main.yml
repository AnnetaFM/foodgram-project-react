name: Main Foodgram Workflow
on:
  push:

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt
    - name: Test with flake8
      run: python -m flake8 backend/ 

  build_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_infra_and_push_to_docker_hub:
    name: Push infra Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./infra/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_infra:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build_and_push_to_docker_hub
  #     - build_frontend_and_push_to_docker_hub
  #     - build_infra_and_push_to_docker_hub
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3
  #     - name: Copy docker-compose.yml via ssh
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.SSH_PASSPHRASE }}
  #         source: "docker-compose.yml"
  #         target: "foodgram"
  #     - name: Executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.SSH_PASSPHRASE }}
  #         script: |
  #           cd foodgram
  #           sudo docker compose -f docker-compose.yml pull
  #           sudo docker compose -f docker-compose.yml down
  #           sudo docker compose -f docker-compose.yml up -d
  #           sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
  #           sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
  #           sudo docker compose -f docker-compose.yml exec backend cp -r /app/static/. /static/static/
  #           sudo docker system prune -af
  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_infra_and_push_to_docker_hub
    steps:
      - name: Run command to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd infra
            sudo rm -f .env
            sudo touch .env
            sudo chmod 666 .env
            
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            
            sudo docker-compose stop
            sudo docker compose rm backend
            sudo docker-compose rm frontend
            
            sudo docker pull anettafm/foodgram_frontend:latest
            sudo docker pull anettafm/foodgram_backend:latest
            sudo docker-compose up -d
            sudo docker system prune -af

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой успешно выполнен!

